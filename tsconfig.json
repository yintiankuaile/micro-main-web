{
  "compilerOptions": {
    "target": "ESNext", // 指定ECMAScript目标版本，"ES3"（默认）， "ES5"， "ES6"/ "ES2015"， "ES2016"， "ES2017"或 "ESNext"
    "useDefineForClassFields": true,
    "lib": ["ES2020", "DOM", "DOM.Iterable"], // 编译过程中需要引入的库文件的列表
    "module": "ESNext", // 指定生成哪个模块系统代码，"None"， "CommonJS"， "AMD"， "System"， "UMD"， "ES6"或 "ES2015"
    "skipLibCheck": true, // 忽略所有的声明文件（ *.d.ts）的类型检查

    /* Bundler mode */
    "moduleResolution": "Node", // 决定如何处理模块。或者是"Node"对于Node.js/io.js，或者是"Classic"（默认）。
    "allowImportingTsExtensions": true,
    "resolveJsonModule": true,
    "isolatedModules": true, // 	将每个文件作为单独的模块（与“ts.transpileModule”类似）
    "noEmit": true, // 不生成输出文件
    "jsx": "react-jsx", // 在 .tsx文件里支持JSX
    "noImplicitAny": false, // 在表达式和声明上有隐含的 any类型时报错
    /* Linting */
    "strict": true, // 	启用所有严格类型检查选项
    "noUnusedLocals": true, // 若有未使用的局部变量则抛错
    "noUnusedParameters": true, // 若有未使用的参数则抛错
    "noFallthroughCasesInSwitch": true, // 报告switch语句的fallthrough错误。（即，不允许switch的case语句贯穿）
    // 针对文静路径映射配置@符号，为了防止@找不到对应模板报错
    "baseUrl": "./",
    "paths": {
      "@": ["src"],
      "@/*": ["src/*"]
    }
  },
  "include": ["src"],
  "references": [{ "path": "./tsconfig.node.json" }],
  "exclude": [
    "node_modules/**",
    "dist",
    "public"
  ]
}
